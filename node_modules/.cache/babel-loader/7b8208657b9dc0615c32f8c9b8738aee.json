{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\armon\\\\Projects\\\\homework\\\\Clicky-Game\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Container from \"./components/Container\";\nimport Row from \"./components/Row/Row\";\nimport Col from \"./components/Col\";\nimport Navbar from \"./components/Navbar\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport mcu from \"./mcu.json\";\nimport MovieCard from \"./components/MovieCard/index\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      mcu,\n      score: 0,\n      highScore: 0,\n      picks: []\n    };\n\n    this.picker = id => {\n      console.log(`picker received ${id}`);\n\n      if (this.state.mcu.some(element => element.id === id)) {\n        const mcu = this.state.mcu.filter(movie => movie.id !== id);\n        mcu.sort(function (a, b) {\n          return 0.5 - Math.random();\n        });\n        console.log(mcu);\n        this.setState({\n          mcu\n        });\n      } else {\n        console.log('wrong answer');\n      }\n    };\n\n    this.scored = () => {\n      this.setState({\n        score: this.state.score + 1\n      });\n\n      if (this.state.score > this.highScore) {\n        this.setState({\n          highScore: this.state.score\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Navbar, {\n      score: this.state.score,\n      highScore: this.state.highScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-flex flex-wrap justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.state.mcu.map(movie => React.createElement(MovieCard, {\n      scored: this.scored,\n      picker: this.picker,\n      id: movie.id,\n      key: movie.id,\n      name: movie.name,\n      image: movie.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), \"}\"))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/armon/Projects/homework/Clicky-Game/src/App.js"],"names":["React","Component","Container","Row","Col","Navbar","Jumbotron","mcu","MovieCard","App","state","score","highScore","picks","picker","id","console","log","some","element","filter","movie","sort","a","b","Math","random","setState","scored","render","map","name","image"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Container from \"./components/Container\";\nimport Row from \"./components/Row/Row\";\nimport Col from \"./components/Col\";\nimport Navbar from \"./components/Navbar\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport mcu from \"./mcu.json\";\nimport MovieCard from \"./components/MovieCard/index\";\n\nclass App extends Component {\n  state = {\n    mcu,\n    score: 0,\n    highScore: 0,\n    picks: []\n  };\n  \n  picker = id => {\n    console.log(`picker received ${id}`)\n    if (this.state.mcu.some( element => element.id === id)) {\n      const mcu = this.state.mcu.filter(movie => movie.id !== id)\n      mcu.sort(function(a, b){return 0.5 - Math.random()})\n      console.log(mcu)\n      this.setState({ mcu }) \n    } else {\n      console.log('wrong answer')\n    }\n    \n  }\n  \n  scored = () => {\n    this.setState({ score: this.state.score + 1 })\n    if (this.state.score > this.highScore) {\n      this.setState({ highScore: this.state.score })\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Navbar score={this.state.score}\n        highScore={this.state.highScore}\n        />\n        <Container>\n          <Jumbotron />\n          <Row>\n            <Col>\n            <Container>\n              <div className=\"d-flex flex-wrap justify-content-center\">\n              {this.state.mcu.map(movie => (\n                <MovieCard\n                scored={this.scored}\n                picker={this.picker}\n                id={movie.id}\n                key={movie.id}\n                name={movie.name}\n                image={movie.image}\n                />\n              ))}\n\n              }\n              </div>\n            </Container>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}