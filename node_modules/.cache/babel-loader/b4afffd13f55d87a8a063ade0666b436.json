{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\armon\\\\Projects\\\\homework\\\\Clicky-Game\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Container from \"./components/Container\";\nimport Row from \"./components/Row/Row\";\nimport Col from \"./components/Col\";\nimport Navbar from \"./components/Navbar\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport mcu from \"./mcu.json\";\nimport MovieCard from \"./components/MovieCard/index\";\nimport theme from \"./components/images/marvel-studios-fanfare-hd.mp3\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      mcu,\n      score: 0,\n      highScore: 0,\n      picks: mcu,\n      theme: theme\n    };\n\n    this.gameOver = newHighScore => {\n      // this.setState({ initialState.highScore: this.state.highScore})\n      this.setState({\n        mcu,\n        score: 0,\n        highScore: newHighScore,\n        picks: mcu\n      });\n    };\n\n    this.picker = id => {\n      console.log(`picker received ${id}`);\n\n      if (this.state.mcu.some(element => element.id === id)) {\n        this.scored();\n        const mcu = this.state.mcu.filter(movie => movie.id !== id);\n        const picks = this.state.picks.sort(function (a, b) {\n          return 0.5 - Math.random();\n        });\n        console.log(mcu);\n        this.setState({\n          mcu,\n          picks\n        });\n      } else {\n        console.log('wrong answer');\n        this.gameOver(this.state.highScore);\n      }\n    };\n\n    this.scored = () => {\n      console.log(this.state);\n      let _this$state = this.state,\n          score = _this$state.score,\n          highScore = _this$state.highScore;\n      score = score + 1;\n\n      if (score > highScore) {\n        this.setState({\n          highScore: score,\n          score: score\n        });\n        console.log(this.state.score, this.state.highScore);\n      } else {\n        this.setState({\n          score: score\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Navbar, {\n      score: this.state.score,\n      highScore: this.state.highScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-flex flex-wrap justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.state.picks.map(movie => React.createElement(MovieCard, {\n      scored: this.scored,\n      picker: this.picker,\n      id: movie.id,\n      key: movie.id,\n      name: movie.name,\n      image: movie.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), \"}\"))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/armon/Projects/homework/Clicky-Game/src/App.js"],"names":["React","Component","Container","Row","Col","Navbar","Jumbotron","mcu","MovieCard","theme","App","state","score","highScore","picks","gameOver","newHighScore","setState","picker","id","console","log","some","element","scored","filter","movie","sort","a","b","Math","random","render","map","name","image"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Container from \"./components/Container\";\nimport Row from \"./components/Row/Row\";\nimport Col from \"./components/Col\";\nimport Navbar from \"./components/Navbar\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport mcu from \"./mcu.json\";\nimport MovieCard from \"./components/MovieCard/index\";\nimport theme from \"./components/images/marvel-studios-fanfare-hd.mp3\"\n\nclass App extends Component {\n  \n  state = {\n    mcu,\n    score: 0,\n    highScore: 0,\n    picks: mcu,\n    theme: theme\n  }\n  \n  gameOver = (newHighScore) => {    \n    // this.setState({ initialState.highScore: this.state.highScore})\n    this.setState({\n      mcu,\n      score: 0,\n      highScore: newHighScore,\n      picks: mcu\n    })\n  }\n  \n  picker = id => {\n    console.log(`picker received ${id}`)\n    if (this.state.mcu.some( element => element.id === id)) {\n      this.scored()\n      const mcu = this.state.mcu.filter(movie => movie.id !== id)\n      const picks = this.state.picks.sort(function(a, b){return 0.5 - Math.random()})\n      console.log(mcu)\n      this.setState({ mcu, picks }) \n    } else {\n      console.log('wrong answer')\n      this.gameOver(this.state.highScore)\n    }\n    \n  }\n  \n  scored = () => {\n    console.log(this.state)\n    let { score, highScore } = this.state\n    score = score + 1\n    if (score > highScore) {\n      this.setState(\n        { highScore: score,\n          score: score }\n          )\n          console.log(this.state.score, this.state.highScore)\n        } else {\n          this.setState({score: score})\n        }\n      }\n      \n      render() {\n        return (\n          <>\n        <Navbar score={this.state.score}\n        highScore={this.state.highScore}\n        />\n        <Container>\n          <Jumbotron />\n          <Row>\n            <Col>\n            <Container>\n              <div className=\"d-flex flex-wrap justify-content-center\">\n              {this.state.picks.map(movie => (\n                <MovieCard\n                scored={this.scored}\n                picker={this.picker}\n                id={movie.id}\n                key={movie.id}\n                name={movie.name}\n                image={movie.image}\n                />\n              ))}\n\n              }\n              </div>\n            </Container>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}