{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\armon\\\\Projects\\\\homework\\\\Clicky-Game\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Container from \"./components/Container\";\nimport Row from \"./components/Row/Row\";\nimport Col from \"./components/Col\";\nimport Navbar from \"./components/Navbar\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport mcu from \"./mcu.json\";\nimport MovieCard from \"./components/MovieCard/index\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      mcu,\n      score: 0,\n      highScore: 0,\n      picks: []\n    };\n\n    this.picker = id => {\n      console.log(`picker received ${id}`);\n      const mcu = this.state.mcu.filter(movie => movie.id !== id);\n      console.log(mcu);\n      this.setState({\n        mcu\n      });\n    };\n\n    this.scored = () => {\n      this.setState({\n        score: this.state.score + 1\n      });\n\n      if (this.state.score > this.highScore) {\n        this.setState({\n          highScore: this.state.score\n        });\n      }\n    };\n  }\n\n  // moviePicks.sort(function(a, b){return 0.5 - Math.random()})\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Navbar, {\n      score: this.state.score,\n      highScore: this.state.highScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-flex flex-wrap justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.state.mcu.map(movie => React.createElement(MovieCard, {\n      scored: this.scored,\n      id: movie.id,\n      key: movie.id,\n      name: movie.name,\n      image: movie.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), \"}\"))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/armon/Projects/homework/Clicky-Game/src/App.js"],"names":["React","Component","Container","Row","Col","Navbar","Jumbotron","mcu","MovieCard","App","state","score","highScore","picks","picker","id","console","log","filter","movie","setState","scored","render","map","name","image"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;;AAEA,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BS,KAD0B,GAClB;AACNH,MAAAA,GADM;AAENI,MAAAA,KAAK,EAAE,CAFD;AAGNC,MAAAA,SAAS,EAAE,CAHL;AAINC,MAAAA,KAAK,EAAE;AAJD,KADkB;;AAAA,SAQ1BC,MAR0B,GAQjBC,EAAE,IAAI;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAa,mBAAkBF,EAAG,EAAlC;AACA,YAAMR,GAAG,GAAG,KAAKG,KAAL,CAAWH,GAAX,CAAeW,MAAf,CAAsBC,KAAK,IAAIA,KAAK,CAACJ,EAAN,KAAaA,EAA5C,CAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYV,GAAZ;AACA,WAAKa,QAAL,CAAc;AAAEb,QAAAA;AAAF,OAAd;AAED,KAdyB;;AAAA,SAgB1Bc,MAhB0B,GAgBjB,MAAM;AACb,WAAKD,QAAL,CAAc;AAAET,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,OAAd;;AACA,UAAI,KAAKD,KAAL,CAAWC,KAAX,GAAmB,KAAKC,SAA5B,EAAuC;AACrC,aAAKQ,QAAL,CAAc;AAAER,UAAAA,SAAS,EAAE,KAAKF,KAAL,CAAWC;AAAxB,SAAd;AACD;AACF,KArByB;AAAA;;AAuB1B;AACAW,EAAAA,MAAM,GAAG;AACP,WACE,0CACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWC,KAA1B;AACA,MAAA,SAAS,EAAE,KAAKD,KAAL,CAAWE,SADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAIE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKF,KAAL,CAAWH,GAAX,CAAegB,GAAf,CAAmBJ,KAAK,IACvB,oBAAC,SAAD;AACA,MAAA,MAAM,EAAE,KAAKE,MADb;AAEA,MAAA,EAAE,EAAEF,KAAK,CAACJ,EAFV;AAGA,MAAA,GAAG,EAAEI,KAAK,CAACJ,EAHX;AAIA,MAAA,IAAI,EAAEI,KAAK,CAACK,IAJZ;AAKA,MAAA,KAAK,EAAEL,KAAK,CAACM,KALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD,MADF,CADA,CADF,CAFF,CAJF,CADF;AA6BD;;AAtDyB;;AAwD5B,eAAehB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Container from \"./components/Container\";\nimport Row from \"./components/Row/Row\";\nimport Col from \"./components/Col\";\nimport Navbar from \"./components/Navbar\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport mcu from \"./mcu.json\";\nimport MovieCard from \"./components/MovieCard/index\";\n\nclass App extends Component {\n  state = {\n    mcu,\n    score: 0,\n    highScore: 0,\n    picks: []\n  };\n  \n  picker = id => {\n    console.log(`picker received ${id}`)\n    const mcu = this.state.mcu.filter(movie => movie.id !== id)\n    console.log(mcu)\n    this.setState({ mcu })\n    \n  }\n  \n  scored = () => {\n    this.setState({ score: this.state.score + 1 })\n    if (this.state.score > this.highScore) {\n      this.setState({ highScore: this.state.score })\n    }\n  }\n\n  // moviePicks.sort(function(a, b){return 0.5 - Math.random()})\n  render() {\n    return (\n      <>\n        <Navbar score={this.state.score}\n        highScore={this.state.highScore}\n        />\n        <Container>\n          <Jumbotron />\n          <Row>\n            <Col>\n            <Container>\n              <div className=\"d-flex flex-wrap justify-content-center\">\n              {this.state.mcu.map(movie => (\n                <MovieCard\n                scored={this.scored}\n                id={movie.id}\n                key={movie.id}\n                name={movie.name}\n                image={movie.image}\n                />\n              ))}\n\n              }\n              </div>\n            </Container>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}